name: Build
description: Builds a container image and push to registry

inputs:
  gh-token:
    required: true
    description: GitHub token with write permission on this repository
  quay-username:
    required: false
    description: Quay.io registry username
  quay-token:
    required: false
    description: Quay.io registry token
  docker-username:
    required: false
    description: Docker Hub registry token
  docker-token:
    required: false
    description: Docker Hub registry token

runs:
  using: composite
  steps:
  -
    name: Setup Node
    uses: actions/setup-node@v3
    with:
      node-version: lts/*
  -
    name: Release
    shell: bash
    id: semantic_release
    env:
      GH_TOKEN: ${{ inputs.gh-token }}
    run: |
      npm install --no-package-lock semantic-release-helm @semantic-release/git @semantic-release/exec
      npx semantic-release
  -
    name: Docker metadata
    id: meta
    uses: docker/metadata-action@v4
    with:
      images: |
        index.docker.io/palermo/${{ github.event.repository.name }}
        quay.io/palermo/${{ github.event.repository.name }}
      tags: |
        type=sha,format=long,prefix=
        type=raw,value=${{steps.semantic_release.outputs.new_release}}
        type=raw,value=latest,enable={{is_default_branch}}
  -
    name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2
  -
    name: Login to Quay.io
    uses: docker/login-action@v2
    if: ${{ github.event_name != 'pull_request' }}
    with:
      registry: quay.io
      username: ${{ inputs.quay-username }}
      password: ${{ inputs.quay-token }}
  -
    name: Login to DockerHub
    uses: docker/login-action@v2
    if: ${{ github.event_name != 'pull_request' }}
    with:
      username: ${{ inputs.docker-username }}
      password: ${{ inputs.docker-token }}
  -
    name: Build and push
    uses: docker/build-push-action@v4
    with:
      context: .
      platforms: linux/amd64,linux/arm64
      push: ${{ github.event_name != 'pull_request' }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      cache-from: type=gha
      cache-to: type=gha,mode=max
